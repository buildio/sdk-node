/**
 * Build.io API V1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Process model module.
 * @module model/Process
 * @version v1
 */
class Process {
    /**
     * Constructs a new <code>Process</code>.
     * @alias module:model/Process
     * @param index {Number} 
     * @param status {String} 
     * @param startedAt {String} 
     */
    constructor(index, status, startedAt) { 
        
        Process.initialize(this, index, status, startedAt);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, index, status, startedAt) { 
        obj['index'] = index;
        obj['status'] = status;
        obj['started_at'] = startedAt;
    }

    /**
     * Constructs a <code>Process</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Process} obj Optional instance to populate.
     * @return {module:model/Process} The populated <code>Process</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Process();

            if (data.hasOwnProperty('index')) {
                obj['index'] = ApiClient.convertToType(data['index'], 'Number');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('started_at')) {
                obj['started_at'] = ApiClient.convertToType(data['started_at'], 'String');
            }
            if (data.hasOwnProperty('restarts')) {
                obj['restarts'] = ApiClient.convertToType(data['restarts'], 'Number');
            }
            if (data.hasOwnProperty('restarted_at')) {
                obj['restarted_at'] = ApiClient.convertToType(data['restarted_at'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Process</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Process</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Process.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // ensure the json data is a string
        if (data['started_at'] && !(typeof data['started_at'] === 'string' || data['started_at'] instanceof String)) {
            throw new Error("Expected the field `started_at` to be a primitive type in the JSON string but got " + data['started_at']);
        }
        // ensure the json data is a string
        if (data['restarted_at'] && !(typeof data['restarted_at'] === 'string' || data['restarted_at'] instanceof String)) {
            throw new Error("Expected the field `restarted_at` to be a primitive type in the JSON string but got " + data['restarted_at']);
        }

        return true;
    }


}

Process.RequiredProperties = ["index", "status", "started_at"];

/**
 * @member {Number} index
 */
Process.prototype['index'] = undefined;

/**
 * @member {String} status
 */
Process.prototype['status'] = undefined;

/**
 * @member {String} started_at
 */
Process.prototype['started_at'] = undefined;

/**
 * @member {Number} restarts
 */
Process.prototype['restarts'] = undefined;

/**
 * @member {String} restarted_at
 */
Process.prototype['restarted_at'] = undefined;






export default Process;

