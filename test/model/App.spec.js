/**
 * Build.io API V1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.BuildIoApiV1);
  }
}(this, function(expect, BuildIoApiV1) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new BuildIoApiV1.App();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('App', function() {
    it('should create an instance of App', function() {
      // uncomment below and update the code to test App
      //var instance = new BuildIoApiV1.App();
      //expect(instance).to.be.a(BuildIoApiV1.App);
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new BuildIoApiV1.App();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new BuildIoApiV1.App();
      //expect(instance).to.be();
    });

    it('should have the property team (base name: "team")', function() {
      // uncomment below and update the code to test the property team
      //var instance = new BuildIoApiV1.App();
      //expect(instance).to.be();
    });

    it('should have the property pipeline (base name: "pipeline")', function() {
      // uncomment below and update the code to test the property pipeline
      //var instance = new BuildIoApiV1.App();
      //expect(instance).to.be();
    });

    it('should have the property dnsRefreshedAt (base name: "dns_refreshed_at")', function() {
      // uncomment below and update the code to test the property dnsRefreshedAt
      //var instance = new BuildIoApiV1.App();
      //expect(instance).to.be();
    });

    it('should have the property buildsCount (base name: "builds_count")', function() {
      // uncomment below and update the code to test the property buildsCount
      //var instance = new BuildIoApiV1.App();
      //expect(instance).to.be();
    });

    it('should have the property deploymentsCount (base name: "deployments_count")', function() {
      // uncomment below and update the code to test the property deploymentsCount
      //var instance = new BuildIoApiV1.App();
      //expect(instance).to.be();
    });

    it('should have the property slugsCount (base name: "slugs_count")', function() {
      // uncomment below and update the code to test the property slugsCount
      //var instance = new BuildIoApiV1.App();
      //expect(instance).to.be();
    });

    it('should have the property currentBuildId (base name: "current_build_id")', function() {
      // uncomment below and update the code to test the property currentBuildId
      //var instance = new BuildIoApiV1.App();
      //expect(instance).to.be();
    });

    it('should have the property currentImageId (base name: "current_image_id")', function() {
      // uncomment below and update the code to test the property currentImageId
      //var instance = new BuildIoApiV1.App();
      //expect(instance).to.be();
    });

    it('should have the property currentDeploymentId (base name: "current_deployment_id")', function() {
      // uncomment below and update the code to test the property currentDeploymentId
      //var instance = new BuildIoApiV1.App();
      //expect(instance).to.be();
    });

    it('should have the property formation (base name: "formation")', function() {
      // uncomment below and update the code to test the property formation
      //var instance = new BuildIoApiV1.App();
      //expect(instance).to.be();
    });

    it('should have the property stack (base name: "stack")', function() {
      // uncomment below and update the code to test the property stack
      //var instance = new BuildIoApiV1.App();
      //expect(instance).to.be();
    });

    it('should have the property region (base name: "region")', function() {
      // uncomment below and update the code to test the property region
      //var instance = new BuildIoApiV1.App();
      //expect(instance).to.be();
    });

    it('should have the property buildpacks (base name: "buildpacks")', function() {
      // uncomment below and update the code to test the property buildpacks
      //var instance = new BuildIoApiV1.App();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new BuildIoApiV1.App();
      //expect(instance).to.be();
    });

    it('should have the property pipelineStage (base name: "pipeline_stage")', function() {
      // uncomment below and update the code to test the property pipelineStage
      //var instance = new BuildIoApiV1.App();
      //expect(instance).to.be();
    });

    it('should have the property policyAllowWebsockets (base name: "policy_allow_websockets")', function() {
      // uncomment below and update the code to test the property policyAllowWebsockets
      //var instance = new BuildIoApiV1.App();
      //expect(instance).to.be();
    });

    it('should have the property policyResponseTimeout (base name: "policy_response_timeout")', function() {
      // uncomment below and update the code to test the property policyResponseTimeout
      //var instance = new BuildIoApiV1.App();
      //expect(instance).to.be();
    });

    it('should have the property policyMaxConnections (base name: "policy_max_connections")', function() {
      // uncomment below and update the code to test the property policyMaxConnections
      //var instance = new BuildIoApiV1.App();
      //expect(instance).to.be();
    });

    it('should have the property policyErosionResistanceSeconds (base name: "policy_erosion_resistance_seconds")', function() {
      // uncomment below and update the code to test the property policyErosionResistanceSeconds
      //var instance = new BuildIoApiV1.App();
      //expect(instance).to.be();
    });

    it('should have the property policyShareProcessNamespace (base name: "policy_share_process_namespace")', function() {
      // uncomment below and update the code to test the property policyShareProcessNamespace
      //var instance = new BuildIoApiV1.App();
      //expect(instance).to.be();
    });

    it('should have the property policyTemporarySelfSigned (base name: "policy_temporary_self_signed")', function() {
      // uncomment below and update the code to test the property policyTemporarySelfSigned
      //var instance = new BuildIoApiV1.App();
      //expect(instance).to.be();
    });

    it('should have the property createdAt (base name: "created_at")', function() {
      // uncomment below and update the code to test the property createdAt
      //var instance = new BuildIoApiV1.App();
      //expect(instance).to.be();
    });

    it('should have the property updatedAt (base name: "updated_at")', function() {
      // uncomment below and update the code to test the property updatedAt
      //var instance = new BuildIoApiV1.App();
      //expect(instance).to.be();
    });

    it('should have the property deletedAt (base name: "deleted_at")', function() {
      // uncomment below and update the code to test the property deletedAt
      //var instance = new BuildIoApiV1.App();
      //expect(instance).to.be();
    });

  });

}));
